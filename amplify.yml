version: 1
backend:
  phases:
    preBuild:
      commands:
        - echo "Node 20"
        - nvm install 20 || true
        - nvm use 20
        - node -v
        - npm -v
    build:
      commands:
        - echo "Install root deps"
        - npm install
        - echo "Install function deps"
        - bash -c 'for d in amplify/functions/*; do if [ -f "$d/package.json" ]; then echo "-> $d"; (cd "$d" && npm install); fi; done'
        - echo "Deploy or update backend first"
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
        - echo "Generate Amplify backend outputs (with retry if stack not ready)"
        - |
          echo "APP_ID=$AWS_APP_ID BRANCH=$AWS_BRANCH"
          attempts=0
          max_attempts=15  # ~2 minutes (15 * 8s)
          sleep_seconds=8
          while true; do
            attempts=$((attempts+1))
            echo "[outputs] Attempt $attempts/$max_attempts"
            if npx ampx generate outputs --app-id "$AWS_APP_ID" --branch "$AWS_BRANCH"; then
              echo "[outputs] Success"
              break
            fi
            if [ $attempts -ge $max_attempts ]; then
              echo "[outputs] WARNING: Stack still not available after $attempts attempts. Proceeding without regenerated outputs (existing amplify_outputs.json will be used if present)." >&2
              break
            fi
            echo "[outputs] Stack not ready yet (StackDoesNotExist). Sleeping ${sleep_seconds}s..."
            sleep $sleep_seconds
          done

frontend:
  phases:
    preBuild:
      commands:
        - echo "Node 20 (frontend)"
        - nvm install 20 || true
        - nvm use 20
        - node -v
        - npm -v
        - npm install
    build:
      commands:
        - echo "Build frontend"
        - echo "Creating runtime environment configuration from Amplify variables"
        - touch .env.production
        - echo "Mapping Amplify environment variables to Next.js format"
        - |
          if [ -n "$BACKEND_SUFFIX" ]; then
            echo "NEXT_PUBLIC_BACKEND_SUFFIX=$BACKEND_SUFFIX" >> .env.production
          fi
        - |
          if [ -n "$GRAPHQL_URL" ]; then
            echo "NEXT_PUBLIC_GRAPHQL_URL=$GRAPHQL_URL" >> .env.production
          fi
        - |
          if [ -n "$USER_POOL_ID" ]; then
            echo "NEXT_PUBLIC_USER_POOL_ID=$USER_POOL_ID" >> .env.production
          fi
        - |
          if [ -n "$USER_POOL_CLIENT_ID" ]; then
            echo "NEXT_PUBLIC_USER_POOL_CLIENT_ID=$USER_POOL_CLIENT_ID" >> .env.production
          fi
        - |
          if [ -n "$S3_BUCKET" ]; then
            echo "NEXT_PUBLIC_S3_PUBLIC_BASE_URL=https://$S3_BUCKET.s3.us-west-1.amazonaws.com" >> .env.production
          fi
        - echo "NEXT_PUBLIC_AWS_REGION=us-west-1" >> .env.production
        - |-
          # Set environment based on AWS branch
          case "$AWS_BRANCH" in
            "production"|"prod-v2") 
              echo "NEXT_PUBLIC_ENVIRONMENT=production" >> .env.production
              ;;
            "staging") 
              echo "NEXT_PUBLIC_ENVIRONMENT=staging" >> .env.production
              ;;
            *) 
              echo "NEXT_PUBLIC_ENVIRONMENT=development" >> .env.production
              ;;
          esac
        - echo "Environment variables mapped to .env.production:"
        - cat .env.production
        - echo "Run strict environment contract verification"
        - STRICT_SUFFIX_ENFORCEMENT=true npm run verify:env-contract
        - npm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - amplify/functions/*/node_modules/**/*
      - .next/cache/**/*
