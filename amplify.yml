version: 1
backend:
  phases:
    preBuild:
      commands:
        - echo "Node 20"
        - nvm install 20 || true
        - nvm use 20
        - node -v
        - npm -v
    build:
      commands:
        - echo "Install root deps"
        - npm install
        - echo "Install function deps"
        - bash -c 'for d in amplify/functions/*; do if [ -f "$d/package.json" ]; then echo "-> $d"; (cd "$d" && npm install); fi; done'
        - echo "Deploy or update backend first"
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
        - echo "Generate Amplify backend outputs (with retry if stack not ready)"
        - |
          echo "APP_ID=$AWS_APP_ID BRANCH=$AWS_BRANCH"
          attempts=0
          max_attempts=15  # ~2 minutes (15 * 8s)
          sleep_seconds=8
          while true; do
            attempts=$((attempts+1))
            echo "[outputs] Attempt $attempts/$max_attempts"
            if npx ampx generate outputs --app-id "$AWS_APP_ID" --branch "$AWS_BRANCH"; then
              echo "[outputs] Success"
              break
            fi
            if [ $attempts -ge $max_attempts ]; then
              echo "[outputs] WARNING: Stack still not available after $attempts attempts. Proceeding without regenerated outputs (existing amplify_outputs.json will be used if present)." >&2
              break
            fi
            echo "[outputs] Stack not ready yet (StackDoesNotExist). Sleeping ${sleep_seconds}s..."
            sleep $sleep_seconds
          done

frontend:
  phases:
    preBuild:
      commands:
        - echo "Node 20 (frontend)"
        - nvm install 20 || true
        - nvm use 20
        - node -v
        - npm -v
        - npm install
    build:
      commands:
        - echo "Build frontend"
        - echo "Transfer Amplify environment variables to Next.js runtime"
        - env | grep -e NEXT_PUBLIC_ >> .env.production
        - env | grep -e AWS_REGION >> .env.production || echo "AWS_REGION=us-west-1" >> .env.production
        - echo "Environment variables transferred to .env.production:"
        - cat .env.production
        - echo "Run strict environment contract verification"
        - STRICT_SUFFIX_ENFORCEMENT=true npm run verify:env-contract
        - npm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - amplify/functions/*/node_modules/**/*
      - .next/cache/**/*
