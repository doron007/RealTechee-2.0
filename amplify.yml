version: 1
backend:
  phases:
    build:
      commands:
        # AWS Amplify Gen 2 Official Pattern: Generate amplify_outputs.json during build
        - echo "🔧 Generating environment-specific amplify_outputs.json"
        - |
          if [ "$AWS_BRANCH" = "main" ]; then
            echo "📍 Development environment (main branch)"
            npx ampx generate outputs --app-id d3atadjk90y9q5 --branch main
          elif [ "$AWS_BRANCH" = "staging" ]; then
            echo "📍 Staging environment (staging branch - shares dev backend)"
            npx ampx generate outputs --app-id d3atadjk90y9q5 --branch main
          elif [ "$AWS_BRANCH" = "prod" ]; then
            echo "📍 Legacy staging environment (prod branch - shares dev backend)"
            npx ampx generate outputs --app-id d3atadjk90y9q5 --branch main
          elif [ "$AWS_BRANCH" = "production" ]; then
            echo "📍 Production environment (production branch - isolated backend)"
            npx ampx pipeline-deploy --branch production --app-id d200k2wsaf8th3
          else
            echo "⚠️  Unknown branch: $AWS_BRANCH, using development config"
            npx ampx generate outputs --app-id d3atadjk90y9q5 --branch main
          fi
        - echo "✅ Environment-specific amplify_outputs.json generated"
frontend:
  phases:
    preBuild:
      commands:
        - echo "📦 Installing dependencies"
        - npm ci
        - echo "🔍 Verifying amplify_outputs.json exists"
        - |
          if [ ! -f "amplify_outputs.json" ]; then
            echo "❌ ERROR: amplify_outputs.json not found after backend phase"
            exit 1
          fi
        - echo "✅ Configuration verified - branch: $AWS_BRANCH"
    build:
      commands:
        - if [ ! -d "./public/meta" ]; then mkdir -p public/meta; fi
        - echo "Building RealTechee version $(node -p "require('./package.json').version")"
        - echo "NEXT_PUBLIC_APP_VERSION=$(node -p "require('./package.json').version")" >> .env.local
        - echo "{\"version\":\"$(node -p "require('./package.json').version")\",\"buildTime\":\"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",\"gitCommit\":\"$(git rev-parse --short HEAD)\"}" > ./public/meta/build-info.json
        - npm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
    discard-paths: false
  cache:
    paths:
      - node_modules/**/*