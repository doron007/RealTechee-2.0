version: 1
backend:
  phases:
    build:
      commands:
        - set -e
        - 'echo "🔧 Skipping backend npm ci (done in frontend) to save time"'
        - 'echo "ℹ️ Backend infra deployment handled by Amplify Console"'
frontend:
  phases:
    preBuild:
      commands:
        - set -e
        - 'echo "🔧 Installing dependencies (single pass)"'
        - npm ci
        - 'echo "🔧 Lambda function dependencies"'
        - npm ci --prefix amplify/functions/notification-processor
        - npm ci --prefix amplify/functions/post-confirmation
        - npm ci --prefix amplify/functions/status-processor
        - npm ci --prefix amplify/functions/reputation-monitor
        - npm ci --prefix amplify/functions/ses-bounce-handler
    build:
      commands:
        - 'echo "🔍 Build Info: $AWS_APP_ID | $AWS_BRANCH"'
        - |
          if [ "$AWS_BRANCH" = "production" ]; then
            echo "📝 Generating amplify_outputs.json (production)..."
          else
            echo "📝 Generating amplify_outputs.json ($AWS_BRANCH)..."
          fi
          npx ampx generate outputs --app-id "$AWS_APP_ID" --branch "$AWS_BRANCH"
          [ -f amplify_outputs.json ] || { echo "❌ Missing amplify_outputs.json"; exit 1; }
        - |
          {
            echo "NEXT_PUBLIC_BACKEND_SUFFIX=$BACKEND_SUFFIX"
            echo "NEXT_PUBLIC_GRAPHQL_URL=$GRAPHQL_URL"
            echo "NEXT_PUBLIC_USER_POOL_ID=$USER_POOL_ID"
            echo "NEXT_PUBLIC_USER_POOL_CLIENT_ID=$USER_POOL_CLIENT_ID"
            echo "NEXT_PUBLIC_AWS_REGION=$AWS_REGION"
          } > .env.production
        - 'echo "🔎 amplify_outputs.json (head)"'
        - 'head -n 20 amplify_outputs.json || true'
        - 'echo "🏗️ Building application..."'
        - npm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - .next/cache/**/*
      - node_modules/**/*
      - amplify/functions/*/node_modules/**/*