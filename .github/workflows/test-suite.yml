name: Comprehensive Test Suite

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Job 1: Public Pages Testing (no authentication required)
  public-pages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-project: [public-homepage, public-contact, public-products]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run public page tests
      run: npx playwright test --project=${{ matrix.test-project }} --reporter=html
      env:
        CI: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.test-project }}
        path: playwright-report/
        retention-days: 7

  # Job 2: Authentication Flow Testing
  auth-flows:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run authentication tests
      run: npx playwright test --project=auth-flows --reporter=html
      env:
        CI: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-auth-flows
        path: playwright-report/
        retention-days: 7

  # Job 3: Admin Pages Testing (requires authentication)
  admin-pages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-project: [isolated-admin-projects, isolated-admin-quotes, isolated-admin-requests, isolated-admin-dashboard]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Create test environment file
      run: |
        echo "NEXT_PUBLIC_TEST_MODE=true" >> .env.local
        echo "CI=true" >> .env.local
      
    - name: Run admin tests
      run: npx playwright test --project=${{ matrix.test-project }} --reporter=html
      env:
        CI: true
        TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL || 'info@realtechee.com' }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD || 'Sababa123!' }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.test-project }}
        path: playwright-report/
        retention-days: 7

  # Job 4: Member Portal Testing
  member-portal:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run member portal tests
      run: npx playwright test --project=member-portal --reporter=html
      env:
        CI: true
        TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL || 'info@realtechee.com' }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD || 'Sababa123!' }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-member-portal
        path: playwright-report/
        retention-days: 7

  # Job 5: Cross-Browser Testing (subset of critical tests)
  cross-browser:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [cross-browser-firefox, cross-browser-webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run cross-browser tests
      run: npx playwright test --project=${{ matrix.browser }} --reporter=html
      env:
        CI: true
        TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL || 'info@realtechee.com' }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD || 'Sababa123!' }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 7

  # Job 6: Full Test Suite Summary
  test-summary:
    runs-on: ubuntu-latest
    needs: [public-pages, auth-flows, admin-pages, member-portal, cross-browser]
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: test-results/
        
    - name: Generate test summary
      run: |
        echo "# Comprehensive Test Suite Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Public Pages**: Homepage, Contact Pages, Product Pages (~300 tests)" >> $GITHUB_STEP_SUMMARY
        echo "- **Authentication Flows**: Login, Registration, Session Management (~20 tests)" >> $GITHUB_STEP_SUMMARY
        echo "- **Admin Pages**: Projects, Quotes, Requests, Dashboard (239 tests)" >> $GITHUB_STEP_SUMMARY
        echo "- **Member Portal**: Profile, Settings, Permissions (~25 tests)" >> $GITHUB_STEP_SUMMARY
        echo "- **Cross-Browser**: Firefox and WebKit compatibility testing" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Total**: ~584 comprehensive enterprise-grade tests" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check job statuses
        if [ "${{ needs.public-pages.result }}" = "success" ]; then
          echo "✅ Public Pages Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Public Pages Tests: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.auth-flows.result }}" = "success" ]; then
          echo "✅ Authentication Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Authentication Tests: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.admin-pages.result }}" = "success" ]; then
          echo "✅ Admin Pages Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Admin Pages Tests: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.member-portal.result }}" = "success" ]; then
          echo "✅ Member Portal Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Member Portal Tests: FAILED" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.cross-browser.result }}" = "success" ]; then
          echo "✅ Cross-Browser Tests: PASSED" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Cross-Browser Tests: FAILED" >> $GITHUB_STEP_SUMMARY
        fi

  # Job 7: Performance Testing (runs weekly)
  performance:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run performance tests
      run: npx playwright test --grep="performance|load time" --reporter=html
      env:
        CI: true
        
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-test-results
        path: playwright-report/
        retention-days: 30

  # Job 8: Accessibility Testing (runs weekly)
  accessibility:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run accessibility tests
      run: npx playwright test --grep="accessibility|aria|keyboard" --reporter=html
      env:
        CI: true
        
    - name: Upload accessibility results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-test-results
        path: playwright-report/
        retention-days: 30